import { useState, useEffect } from "react";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { AlertTriangle } from "lucide-react";

interface DisclaimerDialogProps {
  language: string;
}

export const DisclaimerDialog = ({ language }: DisclaimerDialogProps) => {
  const [isOpen, setIsOpen] = useState(false);

  useEffect(() => {
    // Show disclaimer on first visit
    const hasSeenDisclaimer = localStorage.getItem('nyaysathi-disclaimer-seen');
    if (!hasSeenDisclaimer) {
      setIsOpen(true);
    }
  }, []);

  const handleAccept = () => {
    localStorage.setItem('nyaysathi-disclaimer-seen', 'true');
    setIsOpen(false);
  };

  const getContent = () => {
    if (language === 'hindi') {
      return {
        title: "тЪая╕П рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╕реВрдЪрдирд╛",
        description: "рдиреНрдпрд╛рдпрд╕рд╛рдереА рдПрдХ AI рд╕рд╣рд╛рдпрдХ рд╣реИ, рдпрд╣ рдХрд╛рдиреВрдиреА рдкреЗрд╢реЗрд╡рд░реЛрдВ рдХрд╛ рд╡рд┐рдХрд▓реНрдк рдирд╣реАрдВ рд╣реИред рдХрд╛рдиреВрдиреА рд╡рд┐рд╡рд╛рджреЛрдВ рдХреЗ рд▓рд┐рдП рд╕реНрдерд╛рдиреАрдп рдХрд╛рдиреВрдиреА рд╕рд╣рд╛рдпрддрд╛ рдХрд╛рд░реНрдпрд╛рд▓рдпреЛрдВ рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред",
        note: "рдпрд╣ рд╕рд┐рд░реНрдл рд╕рд╛рдорд╛рдиреНрдп рдЬрд╛рдирдХрд╛рд░реА рдХреЗ рд▓рд┐рдП рд╣реИред рдорд╣рддреНрд╡рдкреВрд░реНрдг рдХрд╛рдиреВрдиреА рдорд╛рдорд▓реЛрдВ рдореЗрдВ рд╣рдореЗрд╢рд╛ рдпреЛрдЧреНрдп рд╡рдХреАрд▓ рд╕реЗ рд╕рд▓рд╛рд╣ рд▓реЗрдВред",
        button: "рдореИрдВ рд╕рдордЭ рдЧрдпрд╛"
      };
    }
    
    return {
      title: "тЪая╕П Important Notice",
      description: "NyaySathi is an AI assistant, not a substitute for legal professionals. Contact local Legal Aid offices for legal disputes.",
      note: "This is for general information only. Always consult qualified lawyers for important legal matters.",
      button: "I Understand"
    };
  };

  const content = getContent();

  return (
    <Dialog open={isOpen} onOpenChange={setIsOpen}>
      <DialogContent className="max-w-md mx-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2 text-orange-600">
            <AlertTriangle className="w-6 h-6" />
            {content.title}
          </DialogTitle>
          <DialogDescription className="text-gray-700 leading-relaxed">
            {content.description}
          </DialogDescription>
        </DialogHeader>
        
        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <p className="text-sm text-yellow-800">
            ЁЯТб {content.note}
          </p>
        </div>

        <DialogFooter>
          <Button 
            onClick={handleAccept}
            className="w-full bg-green-600 hover:bg-green-700"
          >
            {content.button}
          </Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
};